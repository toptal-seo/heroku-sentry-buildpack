#!/usr/bin/env bash
set -e  # Exit on any failure

BUILD_DIR=$1
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)

# Set Sentry Context
SENTRY_ENVIRONMENT=$(cat $ENV_DIR/ENVIRONMENT_NAME);
mkdir -p "$BUILD_DIR/vendor/env"
echo "$SENTRY_ENVIRONMENT" > "$BUILD_DIR/vendor/env/SENTRY_ENVIRONMENT"

PACKAGE_NAME=$(cat "$BUILD_DIR/package.json" \
  | grep '"name"' \
  | head -1 \
  | awk -F: '{ print $2 }' \
  | sed 's/[ ",]//g')
PACKAGE_VERSION=$(cat "$BUILD_DIR/package.json" \
  | grep '"version"' \
  | head -1 \
  | awk -F: '{ print $2 }' \
  | sed 's/[ ",]//g')
echo "$PACKAGE_NAME@$PACKAGE_VERSION" > "$BUILD_DIR/vendor/env/SOURCE_VERSION"
cat "$BUILD_DIR/vendor/env/SOURCE_VERSION"

# Install Sentry CLI
mkdir -p "$BUILD_DIR/vendor/bin"
SENTRY_URL_INFO=$(curl -sL https://sentry.io/get-cli/ | grep SENTRY_DOWNLOAD_Linux_x86_64)
echo "Gotten recent url info: $SENTRY_URL_INFO"
SENTRY_VERSION=${SENTRY_URL_INFO:74:6}
SENTRY_URL=${SENTRY_URL_INFO:30:-1}
echo "-----> Downloading modern Sentry: $SENTRY_URL, version: $SENTRY_VERSION"
curl --silent -L -o "$CACHE_DIR/sentry-cli-$SENTRY_VERSION" "$SENTRY_URL"
cp "$CACHE_DIR/sentry-cli-$SENTRY_VERSION" "$BUILD_DIR/vendor/bin/sentry-cli"
chmod a+x "$BUILD_DIR/vendor/bin/sentry-cli"

# Setting environment variables in .profile.d script (sourced at dyno startup)
echo "-----> Setting Environment Variables"
mkdir -p "$BUILD_DIR/.profile.d"
cp "$BP_DIR"/profile/* "$BUILD_DIR/.profile.d/"
echo "-----> Done"
exit 0
